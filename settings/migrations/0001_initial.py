# Generated by Django 5.0.4 on 2024-05-03 05:50

import ckeditor.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banners',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Home', 'Home'), ('About Laughter Yoga', 'About Laughter Yoga'), ('Invite DrK', 'Invite DrK'), ('LY for Yoga Practitioners', 'LY for Yoga Practitioners'), ('LY for Seniors', 'LY for Seniors'), ('LY for Business', 'LY for Business'), ('LY for School & Colleges', 'LY for School & Colleges'), ('LY for Depression', 'LY for Depression'), ('LY for Cancer', 'LY for Cancer'), ('LY for Special Needs', 'LY for Special Needs'), ('LY Trainings', 'LY Trainings'), ('Online Training by DrK', 'Online Training by DrK'), ('LY 2.0', 'LY 2.0'), ('Teacher Training By DrK', 'Teacher Training By DrK'), ('Finder', 'Finder'), ('DrK Dairy', 'DrK Dairy'), ('Blogs', 'Blogs'), ('Research Articles', 'Research Articles'), ('News', 'News'), ('Testimonials', 'Testimonials'), ('Shop', 'Shop'), ('Prozone', 'Prozone'), ('Zoom Laughter Club', 'Zoom Laughter Club'), ('DrK Upcoming Events', 'DrK Upcoming Events')], max_length=50, null=True, verbose_name='Select Menu')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('image', models.ImageField(null=True, upload_to='settings/banners/%Y/%m/%d/', verbose_name='Banner Image')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Banner',
                'verbose_name_plural': 'Banners',
                'db_table': 'settings-banners',
            },
        ),
        migrations.CreateModel(
            name='Changelog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('description', ckeditor.fields.RichTextField(null=True, verbose_name='Description')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Changelog',
                'verbose_name_plural': 'Changelog',
                'db_table': 'settings-changelog',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('iso3', models.CharField(max_length=3, null=True, verbose_name='ISO 3')),
                ('iso2', models.CharField(max_length=2, null=True, verbose_name='ISO 2')),
                ('numeric_code', models.CharField(max_length=50, null=True, verbose_name='Numeric Code')),
                ('phone_code', models.CharField(max_length=50, null=True, verbose_name='Phone Code')),
                ('capital', models.CharField(max_length=100, null=True, verbose_name='Capital')),
                ('currency', models.CharField(max_length=50, null=True, verbose_name='Currency')),
                ('currency_symbol', models.CharField(max_length=50, null=True, verbose_name='Currency Symbol')),
                ('tld', models.CharField(max_length=50, null=True, verbose_name='TLD')),
                ('native', models.CharField(max_length=50, null=True, verbose_name='Native')),
                ('region', models.CharField(max_length=50, null=True, verbose_name='Region')),
                ('sub_region', models.CharField(blank=True, max_length=50, null=True, verbose_name='Sub Region')),
                ('timezones', models.TextField(null=True, verbose_name='Timezones')),
                ('latitude', models.CharField(max_length=50, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(max_length=50, null=True, verbose_name='Longitude')),
                ('emoji', models.CharField(max_length=50, null=True, verbose_name='Emoji')),
                ('emojiU', models.CharField(max_length=50, null=True, verbose_name='EmojiU')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Country',
                'db_table': 'settings-country',
            },
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Home', 'Home'), ('About Laughter Yoga', 'About Laughter Yoga'), ('Invite DrK', 'Invite DrK'), ('LY for Yoga Practitioners', 'LY for Yoga Practitioners'), ('LY for Seniors', 'LY for Seniors'), ('LY for Business', 'LY for Business'), ('LY for School & Colleges', 'LY for School & Colleges'), ('LY for Depression', 'LY for Depression'), ('LY for Cancer', 'LY for Cancer'), ('LY for Special Needs', 'LY for Special Needs'), ('LY Trainings', 'LY Trainings'), ('Online Training by DrK', 'Online Training by DrK'), ('LY 2.0', 'LY 2.0'), ('Teacher Training By DrK', 'Teacher Training By DrK'), ('Finder', 'Finder'), ('DrK Dairy', 'DrK Dairy'), ('Blogs', 'Blogs'), ('Research Articles', 'Research Articles'), ('News', 'News'), ('Testimonials', 'Testimonials'), ('Shop', 'Shop'), ('Prozone', 'Prozone'), ('Zoom Laughter Club', 'Zoom Laughter Club'), ('DrK Upcoming Events', 'DrK Upcoming Events')], max_length=50, null=True, verbose_name='Select Menu')),
                ('question', models.TextField(null=True, verbose_name='Question')),
                ('answer', models.TextField(null=True, verbose_name='Answer')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'FAQ',
                'verbose_name_plural': 'FAQ',
                'db_table': 'settings-faq',
            },
        ),
        migrations.CreateModel(
            name='MailServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='SMTP From Name')),
                ('email', models.EmailField(max_length=100, null=True, verbose_name='SMTP From Email')),
                ('port', models.CharField(max_length=10, null=True, verbose_name='SMTP Port Number')),
                ('host', models.CharField(max_length=50, null=True, verbose_name='SMTP HOST')),
                ('host_user', models.EmailField(max_length=100, null=True, verbose_name='SMTP Host User')),
                ('host_password', models.CharField(max_length=100, null=True, verbose_name='SMTP Host Password')),
                ('use_tls', models.CharField(choices=[('True', 'True'), ('False', 'False')], max_length=5, null=True, verbose_name='SMTP Use TLS')),
                ('use_ssl', models.CharField(choices=[('True', 'True'), ('False', 'False')], max_length=5, null=True, verbose_name='SMTP Use SSL')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Mail Server',
                'verbose_name_plural': 'Mail Server',
                'db_table': 'settings-mail-server',
            },
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, null=True, verbose_name='Name')),
                ('slug', models.SlugField(allow_unicode=True, blank=True, null=True, unique=True, verbose_name='Slug')),
                ('type', models.CharField(choices=[('Paid', 'Paid'), ('Complimentary', 'Complimentary')], default='free', max_length=30, verbose_name='Type')),
                ('duration', models.IntegerField(verbose_name='Duration in Days')),
                ('price', models.DecimalField(decimal_places=2, default=0, max_digits=5, verbose_name='Price')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=15, verbose_name='Status')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified_date', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Membership',
                'db_table': 'settings-membership',
            },
        ),
        migrations.CreateModel(
            name='RazorPayGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_type', models.CharField(choices=[('Live', 'Live'), ('Test', 'Test')], max_length=10, null=True, verbose_name='RazorPay Key Type')),
                ('key_id', models.CharField(max_length=255, null=True, verbose_name='RazorPay Key Id')),
                ('key_secret', models.CharField(max_length=255, null=True, verbose_name='RazorPay Key Secret')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], max_length=10, null=True, verbose_name='RazorPay Key Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'RazorPay Payment Gateway',
                'verbose_name_plural': 'RazorPay Payment Gateway',
                'db_table': 'settings-razorpay-payment-gateway',
            },
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Title')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
                'db_table': 'settings-services',
            },
        ),
        migrations.CreateModel(
            name='StripeGateway',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key_type', models.CharField(choices=[('Live', 'Live'), ('Test', 'Test')], max_length=10, null=True, verbose_name='Stripe Key Type')),
                ('public_key', models.CharField(max_length=255, null=True, verbose_name='Stripe Public Key')),
                ('secret_key', models.CharField(max_length=255, null=True, verbose_name='Stripe Secret Key')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], max_length=10, null=True, verbose_name='Stripe Key Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Stripe Payment Gateway',
                'verbose_name_plural': 'Stripe Payment Gateway',
                'db_table': 'settings-stripe-payment-gateway',
            },
        ),
        migrations.CreateModel(
            name='Twilio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accountSID', models.CharField(max_length=100, null=True, verbose_name='Account SID')),
                ('authToken', models.CharField(max_length=100, null=True, verbose_name='Auth Token')),
                ('phoneNumber', models.CharField(max_length=20, null=True, verbose_name='Twilio Number')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Twilio',
                'verbose_name_plural': 'Twilio',
                'db_table': 'settings-twilio',
            },
        ),
        migrations.CreateModel(
            name='WebSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True, verbose_name='Brand Name')),
                ('slogan', models.CharField(max_length=255, null=True, verbose_name='Slogan')),
                ('logo_dark', models.ImageField(upload_to='settings/logo/%Y/%m/%d/', verbose_name='Logo Dark')),
                ('logo_light', models.ImageField(upload_to='settings/logo/%Y/%m/%d/', verbose_name='Logo Light')),
                ('favicon', models.FileField(upload_to='settings/favicon/%Y/%m/%d/', verbose_name='Favicon')),
                ('contact_email', models.EmailField(max_length=255, null=True, verbose_name='Contact Email')),
                ('contact_number', models.CharField(max_length=20, null=True, validators=[django.core.validators.RegexValidator('^(\\+?\\d{0,4})?\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{3}\\)?)\\s?-?\\s?(\\(?\\d{4}\\)?)?$', 'The phone number provided is invalid')], verbose_name='Contact Number')),
                ('contact_address', models.CharField(max_length=500, null=True, verbose_name='Contact Address')),
                ('company_name', models.CharField(blank=True, max_length=500, null=True, verbose_name='Registered Company Name')),
                ('company_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Registered Company Address')),
                ('company_gst', models.CharField(blank=True, max_length=50, null=True, verbose_name='Goods and Service Tax')),
                ('default_user', models.ImageField(null=True, upload_to='settings/user/%Y/%m/%d/', verbose_name='Default User Image')),
                ('public_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='Google reCaptcha Public Key')),
                ('private_key', models.CharField(blank=True, max_length=255, null=True, verbose_name='Google reCaptcha Private Key')),
                ('meta_title', models.CharField(max_length=60, null=True, verbose_name='Meta Title')),
                ('meta_description', models.CharField(max_length=158, null=True, verbose_name='Meta Description')),
                ('meta_keywords', models.CharField(max_length=255, null=True, verbose_name='Meta Keywords')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
            ],
            options={
                'verbose_name': 'Web Setting',
                'verbose_name_plural': 'Web Settings',
                'db_table': 'settings-website',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('state_code', models.CharField(max_length=50, null=True, verbose_name='State Code')),
                ('type', models.CharField(blank=True, max_length=100, null=True, verbose_name='Type')),
                ('latitude', models.CharField(max_length=50, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(max_length=50, null=True, verbose_name='Longitude')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='settings.country')),
            ],
            options={
                'verbose_name': 'State',
                'verbose_name_plural': 'State',
                'db_table': 'settings-state',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True, verbose_name='Name')),
                ('latitude', models.CharField(max_length=50, null=True, verbose_name='Latitude')),
                ('longitude', models.CharField(max_length=50, null=True, verbose_name='Longitude')),
                ('status', models.CharField(choices=[('Published', 'Published'), ('Draft', 'Draft')], default='Published', max_length=10, null=True, verbose_name='Status')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created Date')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='Modified Date')),
                ('country', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='settings.country')),
                ('state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='settings.state')),
            ],
            options={
                'verbose_name': 'City',
                'verbose_name_plural': 'City',
                'db_table': 'settings-city',
            },
        ),
    ]
